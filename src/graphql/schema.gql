scalar Date

type Query {
  stations(
    companyIds: [String]
    north: Float
    south: Float
    east: Float
    west: Float
  ): [Station!]
  station(id: ID!): Station!
  companies: [Company!]
  petrolTypes: [PetrolType!]
  search(query: String!): [SearchResult!]
}

type Mutation {
  updatePrice(
    stationId: ID!
    petrolTypeId: ID!
    price: Float!
    date: Date
  ): Boolean!
  createPrice(
    stationId: ID!
    petrolTypeId: ID!
    price: Float!
    date: Date
  ): Boolean!

  # --
  addPetrolToCompany(companyId: ID!, petrolTypeId: ID!): Boolean!
  removePetrolFromCompany(companyId: ID!, petrolTypeId: ID!): Boolean!
}

type SearchResult {
  place_id: ID!
  boundingbox: [String!]
  lat: Float!
  lon: Float!
  display_name: String!
  class: String!
  type: String!
}

type Station {
  id: ID!
  lat: Float!
  lon: Float!
  company: Company!
  prices: [Price!]
  petrolTypes: [PetrolType!]
  pricesHistory: [[Price!]]
}

type Company {
  id: ID!
  name: String!
  logo_img: String!
  imgUrl: String!
  stations: [Station!]
  availablePetrols: [PetrolType!]
  coiProblems: [CoiProblem!]
}

type CoiProblem {
  nid: ID!
  title: String!
  field_company_id: String!
  field_currency: String!
  field_datum: Date!
  field_inspektorat: String!
  field_link_na_rozhodnuti: String!
  field_ph: String!
  field_pokuta: String!
  field_rozhodnuti_pdf: String!
  field_station_id: String!
  field_summary: String!
  field_summary_1: String!
}

type Price {
  id: ID!
  createdAt: Date!
  updatedAt: Date!
  currency: String!
  price: Float!
  type: PetrolType!
  date: Date!
}

type PetrolType {
  id: ID!
  name: String!
  description: String
  superType: PetrolSuperType!
}

type PetrolSuperType {
  id: ID!
  name: String!
  cat: String!
}
